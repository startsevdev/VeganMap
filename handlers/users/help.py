from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandHelp
from aiogram.dispatcher import FSMContext

import logging

from loader import dispatcher, amplitude


logging.basicConfig(format=u'%(filename)s [LINE:%(lineno)d] #%(levelname)-8s [%(asctime)s]  %(message)s',
                    level=logging.INFO)


@dispatcher.message_handler(CommandHelp())
async def bot_help(message: types.Message, state: FSMContext):
    text = ('''   
‚ö†Ô∏è –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–Ω–æ–ø–∫–∞ (–±—ã–≤–∞–µ—Ç —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞):
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
2. –í—ã–±–µ—Ä–∏—Ç–µ ¬´–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è¬ª
3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω –¥–æ—Å—Ç—É–ø Telegram –∫ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏)

üß≠ –ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É¬ª –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –∑–∞–≤–µ–¥–µ–Ω–∏–µ–º
2. –¢–∞–ø–Ω–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–æ–π
3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ú–∞—Ä—à—Ä—É—Ç—ã¬ª
4. –í –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–∏–º–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç

üó∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è –≤ –¥—Ä—É–≥–æ–º —Ä–∞–π–æ–Ω–µ
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
2. –í—ã–±–µ—Ä–∏—Ç–µ ¬´–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è¬ª
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ—á–∫—É –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º –º–µ—Å—Ç–µ

üö¶ –°—Ç–∞—Ç—É—Å—ã –∑–∞–≤–µ–¥–µ–Ω–∏–π
‚Ä¢ 100% vegan: –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –≤–µ–≥–∞–Ω—Å–∫–∏–µ
‚Ä¢ –ö—É—Ö–Ω—è ‚Äì 100 vegan, –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º —É—Ç–æ—á–Ω—è–π—Ç–µ: –æ—Å–æ–±—ã–π —Å—Ç–∞—Ç—É—Å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –¥–ª—è –∫–∞—Ñ–µ ¬´–û–≥—É—Ä—Ü—ã¬ª –∏ ¬´VeggieBox¬ª
‚Ä¢ –ë–æ–ª—å—à–µ —Ç—Ä—ë—Ö –≤–µ–≥–∞–Ω—Å–∫–∏—Ö –ø–æ–∑–∏—Ü–∏–π: –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏ 4 –∏ –±–æ–ª—å—à–µ –ø–æ–∑–∏—Ü–∏–π –ø–æ –≤–µ–≥–∞–Ω—É
‚Ä¢ –ï—Å–ª–∏ –±–ª—é–¥ –º–µ–Ω—å—à–µ —Ç—Ä–µ—Ö, –º—ã –ø—Ä–æ—Å—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö —Å–ø–∏—Å–æ–∫

‚ù§Ô∏è –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ ‚Äì /suggest

‚úâÔ∏è –í–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è ‚Äì @startsevdev
    ''')
    await message.answer(text)

    # –î–õ–Ø –ö–ï–ô–°–ê, –ö–û–ì–î–ê –ü–ï–†–ï–î –≠–¢–ò–ú –ù–ï –ó–ê–ö–û–ù–ß–ò–õ –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –ó–ê–í–ï–î–ï–ù–ò–Ø
    async with state.proxy() as data:
        data["suggest_state"] = 0

    logging.info("User {} sent /help".format(message.from_user.id))
    amplitude.log(message.from_user.id, "/help")

import time

from aiogram import types, bot
from aiogram.dispatcher import FSMContext
import csv
import logging

from loader import dispatcher, amplitude, bot
from data import config


logging.basicConfig(format=u'%(filename)s [LINE:%(lineno)d] #%(levelname)-8s [%(asctime)s]  %(message)s',
                    level=logging.INFO)


# –≠—Ö–æ —Ö–µ–Ω–¥–ª–µ—Ä, –∫—É–¥–∞ –ª–µ—Ç—è—Ç –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
@dispatcher.message_handler(state="*", content_types=types.ContentTypes.ANY)
async def bot_echo_all(message: types.Message, state: FSMContext):
    data = await state.get_data()
    suggest_state = data.get("suggest_state")

    if suggest_state == 1:
        await state.update_data(suggest_state=2, restaurant_name=message.text)
        await message.answer("–ö–∞–∫–∏–µ –≤–µ–≥–∞–Ω—Å–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –µ—Å—Ç—å –≤ —ç—Ç–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏?")
    elif suggest_state == 2:
        await state.update_data(suggest_state=0)
        await message.answer("–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –¥–æ–±–∞–≤–∏–º –µ–≥–æ –≤ –Ω–∞—à—É –±–∞–∑—É. –°–ø–∞—Å–∏–±–æ!\n\n–ù–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã. –ï—Å–ª–∏, –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ Vegan Map, –Ω–∞–ø–∏—à–∏—Ç–µ @oksnavau")

        restaurant_name = data.get("restaurant_name")
        await bot.send_message(config.ADMINS[0], f'#–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ_–∑–∞–≤–µ–¥–µ–Ω–∏–µ\n<b>{data.get("restaurant_name")}</b>\n{message.text}')
        await bot.send_message(config.ADMINS[1], f'#–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ_–∑–∞–≤–µ–¥–µ–Ω–∏–µ\n<b>{data.get("restaurant_name")}</b>\n{message.text}')
    else:
        await message.answer("üìç –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é. –í –æ—Ç–≤–µ—Ç –º—ã –ø—Ä–∏—à–ª–µ–º —Ç—Ä–∏ –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Å—Ç–∞\n")

    logging.info("User {} sent other content".format(message.from_user.id))
    amplitude.log(message.from_user.id, "Other")

    # –†–ê–°–°–´–õ–ö–ê
    # if message.text == "Ootro" and str(message.from_user.id) == config.ADMIN[0]:
    #     cluster = [[]]
    #     counter = 0
    #     with open('data/users.csv', newline='') as File:
    #         reader = csv.reader(File)
    #         for user_id in reader:
    #             if counter < 30:
    #                 cluster[len(cluster)-1].append(user_id[0])
    #                 counter += 1
    #             else:
    #                 counter = 0
    #                 cluster.append([])
    #     for c in cluster:
    #         for user_id in c:
    #             try:
    #                 await bot.send_message(user_id, "<b>–í–µ–≥–∞–Ω—Å–∫–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞</b>\n\n–°–µ–≥–æ–¥–Ω—è —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª —Ñ–µ—Å—Ç–∏–≤–∞–ª—å Utroo\nhttps://t.me/utroo/1103\n\n–ò—â–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –Ω–∞ –Ω–∞—à–µ–π –∫–∞—Ä—Ç–µ üìç\n\n–í —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ —É—á–∞—Å—Ç–≤—É—é—Ç 7 –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ (¬´–ú–µ—á—Ç–∞—Ç–µ–ª–∏¬ª, Atlas bistro, Grecco, Tureckiy bistro, Merula –Ω–∞ –ù–µ–≤—Å–∫–æ–º, Bilbao –∏ ¬´–ú–æ–π–∫–∞ 3¬ª), –∞ —Ç–∞–∫–∂–µ –ø–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è —Å–µ—Ç—å –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏—Ö ¬´–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–µ –ø–µ–∫–∞—Ä–Ω–∏¬ª (–∞ —ç—Ç–æ 22 –∫–∞—Ñ–µ –ø–æ –≤—Å–µ–º—É –≥–æ—Ä–æ–¥—É).\n\n–ó–∞–≤—Ç—Ä–∞–∫–∏ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–±–æ–≤–∞—Ç—å —Ü–µ–ª—ã–π –º–µ—Å—è—Ü. –ò —Ä–µ—á—å ‚Äì –Ω–µ –æ —Å–∫—É—á–Ω—ã—Ö –∫–∞—à–∞—Ö, –Ω–æ –æ –Ω–µ–æ–±—ã—á–Ω—ã—Ö –±–ª—é–¥–∞—Ö, –≤ —á–∏—Å–ª–µ –∫–æ—Ç–æ—Ä—ã—Ö —à–æ–∫–æ–ª–∞–¥–Ω—ã–µ –ø–∞–Ω–∫–µ–π–∫–∏ —Å –∫–∞—Ä–∞–º–µ–ª—å—é –∏–∑ –∫–æ–º–±—É—á–∏, —Ç–æ–º–∞—Ç—ã —Å–æ —Å—Ç—Ä–∞—á–∞—Ç–µ–ª–ª–æ–π –∏–∑ –∫–µ—à—å—é, —Ö–∞—à–±—Ä–∞—É–Ω –∏–∑ —Ç—ã–∫–≤—ã –∏ –≤–µ–≥–∞–Ω—Å–∫–∏–π –±—Ä–∞—É–Ω–∏!")
    #                 logging.info("Sent to " + user_id)
    #             except BaseException:
    #                 print("–û—à–∏–±–∫–∞ –ø—Ä–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏")
    #         time.sleep(1.2)
    #     await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    # else:
